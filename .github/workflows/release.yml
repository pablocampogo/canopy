name: Release

on:
  workflow_dispatch:
    inputs:
      tag:
        description: 'Tag for the release (e.g. v1.0.0)'
        required: true
      release_type:
        description: 'Type: "release" or "tag"'
        required: true
        default: 'release'

jobs:
  release:
    name: Tag or Release
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: '1.23'

      - name: Check if tag exists
        id: check_tag
        run: |
          if git ls-remote --exit-code --tags origin "refs/tags/${{ github.event.inputs.tag }}"; then
            echo "exists=true" >> $GITHUB_OUTPUT
          else
            echo "exists=false" >> $GITHUB_OUTPUT
          fi

      - name: Build binaries
        if: ${{ github.event.inputs.release_type == 'tag' || (github.event.inputs.release_type == 'release' && steps.check_tag.outputs.exists == 'false') }}
        run: |
          make build/wallet
          make build/explorer
          mkdir -p dist

          GOARCH=amd64 CGO_ENABLED=0 GOOS=linux go build -a -o dist/cli-linux-amd64 ./cmd/main/...
          GOARCH=arm64 CGO_ENABLED=0 GOOS=linux go build -a -o dist/cli-linux-arm64 ./cmd/main/...

      - name: Create tag (if not exists)
        if: ${{ steps.check_tag.outputs.exists == 'false' }}
        run: |
          git config user.name "github-actions"
          git config user.email "github-actions@github.com"
          git tag ${{ github.event.inputs.tag }}
          git push origin ${{ github.event.inputs.tag }}

      - name: Create GitHub release (new tag + binaries)
        if: ${{ github.event.inputs.release_type == 'release' && steps.check_tag.outputs.exists == 'false' }}
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ github.event.inputs.tag }}
          files: |
            dist/cli-linux-amd64
            dist/cli-linux-arm64
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Create GitHub release (existing tag, no binaries)
        if: ${{ github.event.inputs.release_type == 'release' && steps.check_tag.outputs.exists == 'true' }}
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ github.event.inputs.tag }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Upload binaries as artifacts (for tag only)
        if: ${{ github.event.inputs.release_type == 'tag' }}
        uses: actions/upload-artifact@v4
        with:
          name: binaries-${{ github.event.inputs.tag }}
          path: |
            dist/cli-linux-amd64
            dist/cli-linux-arm64
